syntax = "proto3";
option go_package = ".;mood";
import "github.com/mwitkow/go-proto-validators/validator.proto";

message Entry {
  uint32 record = 1 [(validator.field) = {int_gt: 0, int_lt: 4}];
  string comment = 2 [(validator.field) = {length_lt: 129}];
}

message AddEntryRequest {
  Entry entry = 1 [(validator.field) = {msg_exists : true}];

  int64 mood_id = 2 [(validator.field) = {int_gt: 0}];
  string entry_access_code = 3 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message AddEntryResponse {}

message GetMoodFromEntryRequest {
  int64 mood_id = 2 [(validator.field) = {int_gt: 0}];
  string entry_access_code = 3 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message GetMoodFromEntryResponse {
  string title = 1 [(validator.field) = {string_not_empty: true, length_lt: 129}];
  string content = 2 [(validator.field) = {length_lt: 513}];
}

message GetMoodRequest {
  int64 mood_id = 1 [(validator.field) = {int_gt: 0}];
  string mood_access_code = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message GetMoodResponse {
  repeated Entry entries = 1;
  map<uint32, int64> stats = 2;
}

message CreateMoodRequest {
  string title = 1 [(validator.field) = {string_not_empty: true, length_lt: 129}];
  string content = 2 [(validator.field) = {length_lt: 513}];
  uint32 number_of_records_needed = 3 [(validator.field) = {int_gt: 0, int_lt: 21}];
}

message CreateMoodResponse {
  int64 mood_id = 1 [(validator.field) = {int_gt: 0}];
  string mood_access_code = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];

  repeated string entries_access_codes = 3;
}

service Mood {
  rpc AddEntry(AddEntryRequest) returns (AddEntryResponse) {}
  rpc GetMoodFromEntry(GetMoodFromEntryRequest) returns (GetMoodFromEntryResponse) {}
  rpc GetMood(GetMoodRequest) returns (GetMoodResponse) {}
  rpc CreateMood(CreateMoodRequest) returns (CreateMoodResponse) {}
}
