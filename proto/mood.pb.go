// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mood.proto

package mood

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Entry struct {
	Record               uint32   `protobuf:"varint,1,opt,name=record,proto3" json:"record,omitempty"`
	Comment              string   `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{0}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetRecord() uint32 {
	if m != nil {
		return m.Record
	}
	return 0
}

func (m *Entry) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type AddEntryRequest struct {
	Entry                *Entry   `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	AccessCode           string   `protobuf:"bytes,2,opt,name=access_code,json=accessCode,proto3" json:"access_code,omitempty"`
	RefAccessCode        string   `protobuf:"bytes,3,opt,name=ref_access_code,json=refAccessCode,proto3" json:"ref_access_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEntryRequest) Reset()         { *m = AddEntryRequest{} }
func (m *AddEntryRequest) String() string { return proto.CompactTextString(m) }
func (*AddEntryRequest) ProtoMessage()    {}
func (*AddEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{1}
}

func (m *AddEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEntryRequest.Unmarshal(m, b)
}
func (m *AddEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEntryRequest.Marshal(b, m, deterministic)
}
func (m *AddEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEntryRequest.Merge(m, src)
}
func (m *AddEntryRequest) XXX_Size() int {
	return xxx_messageInfo_AddEntryRequest.Size(m)
}
func (m *AddEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEntryRequest proto.InternalMessageInfo

func (m *AddEntryRequest) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *AddEntryRequest) GetAccessCode() string {
	if m != nil {
		return m.AccessCode
	}
	return ""
}

func (m *AddEntryRequest) GetRefAccessCode() string {
	if m != nil {
		return m.RefAccessCode
	}
	return ""
}

type AddEntryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEntryResponse) Reset()         { *m = AddEntryResponse{} }
func (m *AddEntryResponse) String() string { return proto.CompactTextString(m) }
func (*AddEntryResponse) ProtoMessage()    {}
func (*AddEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{2}
}

func (m *AddEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEntryResponse.Unmarshal(m, b)
}
func (m *AddEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEntryResponse.Marshal(b, m, deterministic)
}
func (m *AddEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEntryResponse.Merge(m, src)
}
func (m *AddEntryResponse) XXX_Size() int {
	return xxx_messageInfo_AddEntryResponse.Size(m)
}
func (m *AddEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddEntryResponse proto.InternalMessageInfo

type ListEntryRequest struct {
	AccessCode           string   `protobuf:"bytes,1,opt,name=access_code,json=accessCode,proto3" json:"access_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntryRequest) Reset()         { *m = ListEntryRequest{} }
func (m *ListEntryRequest) String() string { return proto.CompactTextString(m) }
func (*ListEntryRequest) ProtoMessage()    {}
func (*ListEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{3}
}

func (m *ListEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntryRequest.Unmarshal(m, b)
}
func (m *ListEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntryRequest.Marshal(b, m, deterministic)
}
func (m *ListEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntryRequest.Merge(m, src)
}
func (m *ListEntryRequest) XXX_Size() int {
	return xxx_messageInfo_ListEntryRequest.Size(m)
}
func (m *ListEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntryRequest proto.InternalMessageInfo

func (m *ListEntryRequest) GetAccessCode() string {
	if m != nil {
		return m.AccessCode
	}
	return ""
}

type ListEntryResponse struct {
	Entries              []*Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntryResponse) Reset()         { *m = ListEntryResponse{} }
func (m *ListEntryResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntryResponse) ProtoMessage()    {}
func (*ListEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{4}
}

func (m *ListEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntryResponse.Unmarshal(m, b)
}
func (m *ListEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntryResponse.Marshal(b, m, deterministic)
}
func (m *ListEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntryResponse.Merge(m, src)
}
func (m *ListEntryResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntryResponse.Size(m)
}
func (m *ListEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntryResponse proto.InternalMessageInfo

func (m *ListEntryResponse) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type CreateMoodRequest struct {
	Title                 string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content               string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	NumberOfRecordsNeeded uint32   `protobuf:"varint,3,opt,name=number_of_records_needed,json=numberOfRecordsNeeded,proto3" json:"number_of_records_needed,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CreateMoodRequest) Reset()         { *m = CreateMoodRequest{} }
func (m *CreateMoodRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMoodRequest) ProtoMessage()    {}
func (*CreateMoodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{5}
}

func (m *CreateMoodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMoodRequest.Unmarshal(m, b)
}
func (m *CreateMoodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMoodRequest.Marshal(b, m, deterministic)
}
func (m *CreateMoodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMoodRequest.Merge(m, src)
}
func (m *CreateMoodRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMoodRequest.Size(m)
}
func (m *CreateMoodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMoodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMoodRequest proto.InternalMessageInfo

func (m *CreateMoodRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateMoodRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CreateMoodRequest) GetNumberOfRecordsNeeded() uint32 {
	if m != nil {
		return m.NumberOfRecordsNeeded
	}
	return 0
}

type CreateMoodResponse struct {
	AccessCode           string   `protobuf:"bytes,1,opt,name=access_code,json=accessCode,proto3" json:"access_code,omitempty"`
	RecordsAccessCodes   []string `protobuf:"bytes,3,rep,name=records_access_codes,json=recordsAccessCodes,proto3" json:"records_access_codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMoodResponse) Reset()         { *m = CreateMoodResponse{} }
func (m *CreateMoodResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMoodResponse) ProtoMessage()    {}
func (*CreateMoodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_496125bb9b4a15f3, []int{6}
}

func (m *CreateMoodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMoodResponse.Unmarshal(m, b)
}
func (m *CreateMoodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMoodResponse.Marshal(b, m, deterministic)
}
func (m *CreateMoodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMoodResponse.Merge(m, src)
}
func (m *CreateMoodResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMoodResponse.Size(m)
}
func (m *CreateMoodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMoodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMoodResponse proto.InternalMessageInfo

func (m *CreateMoodResponse) GetAccessCode() string {
	if m != nil {
		return m.AccessCode
	}
	return ""
}

func (m *CreateMoodResponse) GetRecordsAccessCodes() []string {
	if m != nil {
		return m.RecordsAccessCodes
	}
	return nil
}

func init() {
	proto.RegisterType((*Entry)(nil), "Entry")
	proto.RegisterType((*AddEntryRequest)(nil), "AddEntryRequest")
	proto.RegisterType((*AddEntryResponse)(nil), "AddEntryResponse")
	proto.RegisterType((*ListEntryRequest)(nil), "ListEntryRequest")
	proto.RegisterType((*ListEntryResponse)(nil), "ListEntryResponse")
	proto.RegisterType((*CreateMoodRequest)(nil), "CreateMoodRequest")
	proto.RegisterType((*CreateMoodResponse)(nil), "CreateMoodResponse")
}

func init() {
	proto.RegisterFile("mood.proto", fileDescriptor_496125bb9b4a15f3)
}

var fileDescriptor_496125bb9b4a15f3 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x5d, 0x6b, 0xe2, 0x40,
	0x14, 0x35, 0x9b, 0x55, 0xd7, 0x2b, 0xa2, 0xb9, 0xeb, 0x2e, 0x41, 0x16, 0x36, 0xcc, 0xc3, 0xe2,
	0xd3, 0xb0, 0x55, 0x5a, 0xe9, 0xa3, 0x48, 0xdf, 0xfa, 0x01, 0xf9, 0x03, 0x41, 0x33, 0x37, 0x25,
	0xd0, 0x64, 0xec, 0xcc, 0x08, 0x2d, 0xf4, 0x17, 0xf5, 0x57, 0x16, 0x33, 0x49, 0x8d, 0xc9, 0x43,
	0x1f, 0xcf, 0x3d, 0x77, 0xee, 0xb9, 0xe7, 0xdc, 0x01, 0xc8, 0xa4, 0x14, 0x7c, 0xaf, 0xa4, 0x91,
	0xec, 0x1a, 0xba, 0x37, 0xb9, 0x51, 0xaf, 0xf8, 0x1b, 0x7a, 0x8a, 0x62, 0xa9, 0x84, 0xef, 0x04,
	0xce, 0x7c, 0x14, 0x96, 0x08, 0x7d, 0xe8, 0xc7, 0x32, 0xcb, 0x28, 0x37, 0xfe, 0xb7, 0xc0, 0x99,
	0x0f, 0xc2, 0x0a, 0xb2, 0x17, 0x18, 0xaf, 0x85, 0x28, 0x5e, 0x87, 0xf4, 0x7c, 0x20, 0x6d, 0xf0,
	0x0f, 0x74, 0xe9, 0x88, 0x8b, 0x19, 0xc3, 0x45, 0x8f, 0x5b, 0xd6, 0x16, 0xf1, 0x2f, 0x0c, 0xb7,
	0x71, 0x4c, 0x5a, 0x47, 0xb1, 0x14, 0x54, 0x8e, 0x03, 0x5b, 0xda, 0x48, 0x41, 0xf8, 0x0f, 0xc6,
	0x8a, 0x92, 0xa8, 0xde, 0xe4, 0x16, 0x4d, 0x23, 0x45, 0xc9, 0xfa, 0xb3, 0x8f, 0x21, 0x4c, 0x4e,
	0xca, 0x7a, 0x2f, 0x73, 0x4d, 0x6c, 0x09, 0x93, 0xdb, 0x54, 0x9b, 0xb3, 0x75, 0x1a, 0x82, 0x4e,
	0x53, 0x90, 0x5d, 0x82, 0x57, 0x7b, 0x64, 0x27, 0x61, 0x00, 0xfd, 0xe3, 0xbe, 0x29, 0x69, 0xdf,
	0x09, 0xdc, 0x9a, 0x8d, 0xaa, 0xcc, 0xde, 0xc0, 0xdb, 0x28, 0xda, 0x1a, 0xba, 0x93, 0x52, 0x54,
	0x62, 0x53, 0xe8, 0x9a, 0xd4, 0x3c, 0x55, 0x32, 0x16, 0xd8, 0xf8, 0x72, 0x73, 0x16, 0x5f, 0x01,
	0x71, 0x05, 0x7e, 0x7e, 0xc8, 0x76, 0xa4, 0x22, 0x99, 0x44, 0x36, 0x6c, 0x1d, 0xe5, 0x44, 0x82,
	0x44, 0xe1, 0x7a, 0x14, 0xfe, 0xb2, 0xfc, 0x43, 0x12, 0x5a, 0xf6, 0xbe, 0x20, 0xd9, 0x23, 0x60,
	0x5d, 0xbd, 0xdc, 0xfa, 0x2b, 0xaf, 0xf8, 0x1f, 0xa6, 0x95, 0x4a, 0xad, 0x51, 0xfb, 0x6e, 0xe0,
	0xce, 0x07, 0x21, 0x96, 0xdc, 0x29, 0x65, 0xbd, 0x78, 0x77, 0xe0, 0xfb, 0x51, 0x03, 0x2f, 0xe0,
	0x47, 0x95, 0x37, 0x4e, 0x78, 0xe3, 0xe8, 0x33, 0x8f, 0xb7, 0x8e, 0xd1, 0xc1, 0x2b, 0x18, 0x56,
	0xc9, 0xa6, 0xa4, 0xd1, 0xe3, 0xcd, 0xe3, 0xcc, 0x90, 0xb7, 0xa2, 0x67, 0x1d, 0x5c, 0x01, 0x9c,
	0xcc, 0x21, 0xf2, 0x56, 0xce, 0xb3, 0x9f, 0xbc, 0xed, 0x9e, 0x75, 0x76, 0xbd, 0xe2, 0x3f, 0x2f,
	0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x16, 0x2b, 0xab, 0x2d, 0xdd, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MoodClient is the client API for Mood service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoodClient interface {
	AddEntry(ctx context.Context, in *AddEntryRequest, opts ...grpc.CallOption) (*AddEntryResponse, error)
	ListEntries(ctx context.Context, in *ListEntryRequest, opts ...grpc.CallOption) (*ListEntryResponse, error)
	CreateMood(ctx context.Context, in *CreateMoodRequest, opts ...grpc.CallOption) (*CreateMoodResponse, error)
}

type moodClient struct {
	cc grpc.ClientConnInterface
}

func NewMoodClient(cc grpc.ClientConnInterface) MoodClient {
	return &moodClient{cc}
}

func (c *moodClient) AddEntry(ctx context.Context, in *AddEntryRequest, opts ...grpc.CallOption) (*AddEntryResponse, error) {
	out := new(AddEntryResponse)
	err := c.cc.Invoke(ctx, "/Mood/AddEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moodClient) ListEntries(ctx context.Context, in *ListEntryRequest, opts ...grpc.CallOption) (*ListEntryResponse, error) {
	out := new(ListEntryResponse)
	err := c.cc.Invoke(ctx, "/Mood/ListEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moodClient) CreateMood(ctx context.Context, in *CreateMoodRequest, opts ...grpc.CallOption) (*CreateMoodResponse, error) {
	out := new(CreateMoodResponse)
	err := c.cc.Invoke(ctx, "/Mood/CreateMood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoodServer is the server API for Mood service.
type MoodServer interface {
	AddEntry(context.Context, *AddEntryRequest) (*AddEntryResponse, error)
	ListEntries(context.Context, *ListEntryRequest) (*ListEntryResponse, error)
	CreateMood(context.Context, *CreateMoodRequest) (*CreateMoodResponse, error)
}

// UnimplementedMoodServer can be embedded to have forward compatible implementations.
type UnimplementedMoodServer struct {
}

func (*UnimplementedMoodServer) AddEntry(ctx context.Context, req *AddEntryRequest) (*AddEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEntry not implemented")
}
func (*UnimplementedMoodServer) ListEntries(ctx context.Context, req *ListEntryRequest) (*ListEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEntries not implemented")
}
func (*UnimplementedMoodServer) CreateMood(ctx context.Context, req *CreateMoodRequest) (*CreateMoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMood not implemented")
}

func RegisterMoodServer(s *grpc.Server, srv MoodServer) {
	s.RegisterService(&_Mood_serviceDesc, srv)
}

func _Mood_AddEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoodServer).AddEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mood/AddEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoodServer).AddEntry(ctx, req.(*AddEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mood_ListEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoodServer).ListEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mood/ListEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoodServer).ListEntries(ctx, req.(*ListEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mood_CreateMood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoodServer).CreateMood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mood/CreateMood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoodServer).CreateMood(ctx, req.(*CreateMoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mood_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Mood",
	HandlerType: (*MoodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEntry",
			Handler:    _Mood_AddEntry_Handler,
		},
		{
			MethodName: "ListEntries",
			Handler:    _Mood_ListEntries_Handler,
		},
		{
			MethodName: "CreateMood",
			Handler:    _Mood_CreateMood_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mood.proto",
}
